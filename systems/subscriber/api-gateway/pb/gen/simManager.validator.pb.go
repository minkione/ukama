// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: simManager.proto

package gen

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *AllocateSimRequest) Validate() error {
	return nil
}
func (this *AllocateSimResponse) Validate() error {
	if this.Sim != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sim); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sim", err)
		}
	}
	return nil
}
func (this *GetSimRequest) Validate() error {
	return nil
}
func (this *GetSimResponse) Validate() error {
	if this.Sim != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Sim); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Sim", err)
		}
	}
	return nil
}
func (this *GetSimsBySubscriberRequest) Validate() error {
	return nil
}
func (this *GetSimsBySubscriberResponse) Validate() error {
	for _, item := range this.Sims {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Sims", err)
			}
		}
	}
	return nil
}
func (this *GetSimsByNetworkRequest) Validate() error {
	return nil
}
func (this *GetSimsByNetworkResponse) Validate() error {
	for _, item := range this.Sims {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Sims", err)
			}
		}
	}
	return nil
}
func (this *ToggleSimStatusRequest) Validate() error {
	return nil
}
func (this *ToggleSimStatusResponse) Validate() error {
	return nil
}
func (this *DeleteSimRequest) Validate() error {
	return nil
}
func (this *DeleteSimResponse) Validate() error {
	return nil
}
func (this *AddPackageRequest) Validate() error {
	if this.StartDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartDate", err)
		}
	}
	return nil
}
func (this *AddPackageResponse) Validate() error {
	return nil
}
func (this *GetPackagesBySimRequest) Validate() error {
	return nil
}
func (this *GetPackagesBySimResponse) Validate() error {
	for _, item := range this.Packages {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Packages", err)
			}
		}
	}
	return nil
}
func (this *SetActivePackageRequest) Validate() error {
	return nil
}
func (this *SetActivePackageResponse) Validate() error {
	return nil
}
func (this *RemovePackageRequest) Validate() error {
	return nil
}
func (this *RemovePackageResponse) Validate() error {
	return nil
}
func (this *Package) Validate() error {
	if this.StartDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartDate", err)
		}
	}
	if this.EndDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EndDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EndDate", err)
		}
	}
	return nil
}
func (this *Sim) Validate() error {
	if this.Package != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Package); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Package", err)
		}
	}
	if this.FirstActivatedOn != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FirstActivatedOn); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FirstActivatedOn", err)
		}
	}
	if this.LastActivatedOn != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LastActivatedOn); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LastActivatedOn", err)
		}
	}
	if this.AllocatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AllocatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AllocatedAt", err)
		}
	}
	return nil
}
