syntax = "proto3";

option go_package = "pb/gen";

package ukama.msgClient.v1;

import "validator.proto";
import "google/protobuf/any.proto";

service MsgClientService {

    rpc RegisterService(RegisterServiceReq) returns (RegisterServiceResp);
    rpc StartMsgBusHandler(StartMsgBusHandlerReq) returns (StartMsgBusHandlerResp);
    rpc StopMsgBusHandler(StopMsgBusHandlerReq) returns (StopMsgBusHandlerResp);
    rpc UnregisterService(UnregisterServiceReq) returns (UnregisterServiceResp);
    rpc PublishMsg(PublishMsgRequest) returns (PublishMsgResponse);

}
enum REGISTRAION_STATUS {
    REGISTERED = 0;
    ALLREADY_REGISTERED = 1;
    NOT_REGISTERED =2;
    LISTNENING = 3;
    LISTNENING_FAILURE = 4;
}

message RegisterServiceReq {
    string systemName = 1 [(validator.field) = {string_not_empty: true}];
    string serviceName = 2 [(validator.field) = {string_not_empty: true}];
    string instanceId = 3  [(validator.field) = {string_not_empty: true}];
    string msgBusURI = 4 [(validator.field) = {string_not_empty: true}];
    string serviceURI = 5;
    string listQueue = 6;
    string publQueue = 7;
    string exchange = 8;
    uint32 grpcTimeout = 9; 
    repeated string routes = 10 ;
}

message RegisterServiceResp {
    REGISTRAION_STATUS state =1;
    string serviceUuid = 2; 
}

message UnregisterServiceReq {
    string serviceUuid = 1 [(validator.field) = {string_not_empty: true}];
}

message UnregisterServiceResp {
}

message StartMsgBusHandlerReq {
    string serviceUuid = 1 [(validator.field) = {string_not_empty: true}];
}

message StopMsgBusHandlerReq {
    string serviceUuid = 1 [(validator.field) = {string_not_empty: true}];
}

message StartMsgBusHandlerResp {
}

message StopMsgBusHandlerResp {
}

message PublishMsgRequest {
    string serviceUuid = 1 [(validator.field) = {string_not_empty: true}];
    string routingKey = 2 [(validator.field) = {string_not_empty: true}];
    google.protobuf.Any msg = 3;
}

message PublishMsgResponse {

}