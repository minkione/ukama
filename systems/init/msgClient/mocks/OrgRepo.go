// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	db "github.com/ukama/ukama/systems/init/lookup/internal/db"
)

// OrgRepo is an autogenerated mock type for the OrgRepo type
type OrgRepo struct {
	mock.Mock
}

// Add provides a mock function with given fields: org
func (_m *OrgRepo) Add(org *db.Org) error {
	ret := _m.Called(org)

	var r0 error
	if rf, ok := ret.Get(0).(func(*db.Org) error); ok {
		r0 = rf(org)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByName provides a mock function with given fields: name
func (_m *OrgRepo) GetByName(name string) (*db.Org, error) {
	ret := _m.Called(name)

	var r0 *db.Org
	if rf, ok := ret.Get(0).(func(string) *db.Org); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*db.Org)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: org
func (_m *OrgRepo) Update(org *db.Org) error {
	ret := _m.Called(org)

	var r0 error
	if rf, ok := ret.Get(0).(func(*db.Org) error); ok {
		r0 = rf(org)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOrgRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewOrgRepo creates a new instance of OrgRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOrgRepo(t mockConstructorTestingTNewOrgRepo) *OrgRepo {
	mock := &OrgRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
